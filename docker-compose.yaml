version: '2'
services:

  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    volumes:
      - ./gen/descriptor:/proto
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
      CMD_ARGS: "--message.format=PROTOBUF --protobufdesc.directory=/proto --topic.deleteEnabled=false --topic.createEnabled=false"
    depends_on:
      - "kafka"
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  envoy-proxy:
    container_name: envoy-proxy
    image: envoyproxy/envoy-dev
    ports:
      - "10000:10000"
      - "9901:9901"
    depends_on:
      - kafdrop
      - oidc-server-mock
    volumes:
      - ./envoy.yaml:/etc/envoy/envoy.yaml
  oidc-server-mock:
    container_name: oidc-server-mock
    image: ghcr.io/soluto/oidc-server-mock:latest
    ports:
      - "4011:80"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      API_SCOPES_INLINE: |
        [
          {
            "Name": "kafka-viewer",
            "UserClaims": ["kafka-viewer-envs"]
          }
        ]

      API_RESOURCES_INLINE: |
        [
          {
            "Name": "kafka-viewer-app",
            "Scopes": ["kafka-viewer"],
            "ApiSecrets": ["kafka-viewer"],
            "UserClaims": ["kafka-viewer-envs"]
          }
        ]
      SERVER_OPTIONS_INLINE: |
        {
          "AccessTokenJwtType": "JWT",
          "Discovery": {
            "ShowKeySet": true
          },
          "Authentication": {
            "CookieSameSiteMode": "Lax",
            "CheckSessionCookieSameSiteMode": "Lax"
          }
        }
      ACCOUNT_OPTIONS_INLINE: |
        {
          "AutomaticRedirectAfterSignOut": true
        }
      IDENTITY_RESOURCES_INLINE: |
        [
          {
            "Name": "kafka-viewer-2",
            "ClaimTypes": ["kafka-viewer-envs"]
          }
        ]
      USERS_CONFIGURATION_INLINE: |
        [
          {
            "SubjectId":"1",
            "Username":"User1",
            "Password":"pwd",
            "Claims": [
                {
                "Type": "kafka-viewer-envs",
                "Value": "['sys-50', 'sys-51']",
                "ValueType": "json"
              }
            ]
          },
          {
            "SubjectId":"2",
            "Username":"User2",
            "Password":"pwd",
            "Claims": [
                {
                "Type": "kafka-viewer-envs",
                "Value": "['sys-60']",
                "ValueType": "json"
              }
            ]
          }
        ]
      CLIENTS_CONFIGURATION_INLINE: |
        [
   
              {
                  "ClientId": "authorization-code-client-id",
                  "ClientSecrets": ["authorization-code-client-secret"],
                  "Description": "Client for authorization code flow",
                  "AllowedGrantTypes": ["authorization_code"],
                  "AllowAccessTokensViaBrowser": true,
                  "RedirectUris": ["http://localhost:10000/callback","http://localhost:10000"],
                  "RequirePkce": false,
                  "AllowedScopes": ["openid", "profile", "email", "kafka-viewer"],
                  "IdentityTokenLifetime": 3600,
                  "AccessTokenLifetime": 3600,
                  "RequireClientSecret": false
                  
                 
                },
                {
                  "ClientId": "client-credentials-flow-client-id",
                  "ClientSecrets": ["client-credentials-flow-client-secret"],
                  "Description": "Client for client credentials flow",
                  "AllowedGrantTypes": ["client_credentials"],
                  "AllowedScopes": ["kafka-viewer"],
                  "ClientClaimsPrefix": "",
                  "Claims": [
                    {
                        "Type": "kafka-viewer-envs",
                        "Value": "['sys-50', 'sys-51']",
                        "ValueType": "json"
                    }
                  ]
                }
        ]
 