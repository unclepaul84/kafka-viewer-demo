admin:
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 9901
static_resources:

  secrets:
  - name: token
    generic_secret:
      secret:
        inline_string: authorization-code-client-secret

  - name: hmac
    generic_secret:
      secret:
        inline_string: blah

  listeners:
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 10000

    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          codec_type: AUTO
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: upstream
              domains:
              - "*"
              routes:
              - match:
                  prefix: "/"
                route:
                  cluster: upstream-service

          http_filters:
          - name: envoy.filters.http.oauth2
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.oauth2.v3.OAuth2
              config:
                token_endpoint:
                  cluster: oauth
                  uri: "http://oidc-server-mock/connect/token"
                  timeout: 5s
                authorization_endpoint: "http://localhost:4011/connect/authorize"
                redirect_uri: "http://localhost:10000/callback"
                redirect_path_matcher:
                  path:
                    exact: /callback
                signout_path:
                  path:
                    exact: /signout

                forward_bearer_token: true
                credentials:
                  client_id: authorization-code-client-id
                  token_secret:
                    name: token
                  hmac_secret:
                    name: hmac
                auth_scopes:
                - openid
                - profile
                - kafka-viewer

          - name: envoy.filters.http.jwt_authn      
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication
              providers:
                provider1:
                  payload_in_metadata: "payload"
                  remote_jwks:
                    http_uri:
                      uri: "http://oidc-server-mock/.well-known/openid-configuration/jwks"
                      cluster: oauth
                      timeout: 5s
                    cache_duration: 600s

              rules:
                 - match:
                     prefix: /
                   requires:
                     provider_name: provider1

          - name: envoy.filters.http.rbac
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.rbac.v3.RBAC
              rules:
                action: ALLOW
                policies:
                   "admin":
                      principals:
                        - metadata:
                            filter: envoy.filters.http.jwt_authn
                            path:
                              - key: payload
                              - key: kafka-viewer-envs
                            value:
                                list_match:
                                  one_of:
                                    string_match:
                                      exact: sys-50
                      permissions:
                        - any: true

          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

  clusters:
  - name: upstream-service
    connect_timeout: 2s
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: upstream-service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: kafdrop
                port_value: 9000

  - name: oauth
    connect_timeout: 2s
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: oauth
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: oidc-server-mock
                port_value: 80